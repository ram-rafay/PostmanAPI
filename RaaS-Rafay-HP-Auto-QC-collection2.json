{
	"info": {
		"_postman_id": "a852f15e-dad9-4ef7-bb64-bef733937eb4",
		"name": "RaaS-Rafay-HP-Auto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Console Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Console login\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"",
							"    if (jsonData.organization[\"id\"] != undefined) {",
							"        pm.globals.set('org_id', jsonData.organization[\"id\"]);",
							"    }",
							"",
							"    pm.globals.set('account_id', jsonData.account[\"id\"]);",
							"    pm.globals.set('console_rsid', pm.cookies.get('rsid'))",
							"    pm.globals.set('console_csrftoken', pm.cookies.get('csrftoken'))",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"username\": \"{{username}}\", \"password\": \"{{password}}\" }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}/auth/v1/login/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"v1",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Projects GET\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    for (var key in jsonData.results) {",
							"        if ( jsonData.results[key][\"name\"] == pm.environment.get('project') ) {",
							"            pm.environment.set(\"project_id\", jsonData.results[key][\"id\"]);",
							"            pm.environment.set(\"defaultproject_id\", jsonData.results[key][\"id\"]);",
							"        }",
							"   }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"value": "{{console_csrftoken}}",
						"type": "text"
					},
					{
						"key": "cookie",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url}}/auth/v1/projects/?limit=100&offset=0",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"v1",
						"projects",
						""
					],
					"query": [
						{
							"key": "limit",
							"value": "100"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Namespace List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"NS Create\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"ns\", jsonData.name);",
							"    pm.environment.set(\"ns_id\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/config/project/{{project_id}}/namespace?&options.limit=10&options.offset=0&options.writeOnly=false&options.orderBy=created_at&options.order=DESC",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"config",
						"project",
						"{{project_id}}",
						"namespace"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "options.limit",
							"value": "10"
						},
						{
							"key": "options.offset",
							"value": "0"
						},
						{
							"key": "options.writeOnly",
							"value": "false"
						},
						{
							"key": "options.orderBy",
							"value": "created_at"
						},
						{
							"key": "options.order",
							"value": "DESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Namespace Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"NS Create\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"ns_name\", jsonData.metadata[\"name\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"value": "{{console_csrftoken}}",
						"type": "text"
					},
					{
						"key": "cookie",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"kind\": \"Namespace\",\n  \"metadata\": {\n    \"name\": \"ns-{{$randomInt}}\"\n  },\n  \"spec\": {\n    \"metadata\": {\n      \"name\": \"ns-{{$randomInt}}\"\n    },\n    \"spec\": {\n      \"namespaceMeta\": {\n        \"name\": \"ns-{{$randomInt}}\"\n      }\n    },\n    \"type\": \"RafayWizard\",\n    \"placement\": {\n      \"driftAction\": \"DriftReconcillationActionNotSet\",\n      \"clusterLabels\": [\n        {\n          \"key\": \"rafay.dev/clusterName\",\n          \"value\": \"{{cluster}}\"\n        }\n      ],\n      \"placementType\": \"ClusterSpecific\"\n    }\n  }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}/v2/config/project/{{project_id}}/namespace",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"config",
						"project",
						"{{project_id}}",
						"namespace"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cluster List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET Cluster\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v1/infra/projects/{{defaultproject_id}}/clusters/?limit=2",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"infra",
						"projects",
						"{{defaultproject_id}}",
						"clusters",
						""
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Repository Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Reository Create\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"repository_name\", jsonData.metadata[\"name\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"metadata\": {\r\n        \"name\": \"gitops-token-{{$randomInt}}\"\r\n    },\r\n    \"spec\": {\r\n        \"endpoint\": \"{{endpoint}}\",\r\n        \"repositoryType\": \"GitRepository\",\r\n        \"credentialType\": \"UserPassCredential\",\r\n        \"credentials\": {\r\n            \"userPass\": {\r\n                \"username\": \"{{usernamegit}}\",\r\n                \"password\": \"{{tokengit}}\"\r\n            },\r\n            \"ssh\": {}\r\n        },\r\n        \"insecure\": false,\r\n        \"internalNetworkAccessOnly\": false\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}/v2/config/project/{{defaultproject_id}}/repository",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"config",
						"project",
						"{{defaultproject_id}}",
						"repository"
					]
				}
			},
			"response": []
		},
		{
			"name": "Repository List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Repo List\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/config/project/{{defaultproject_id}}/repository",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"config",
						"project",
						"{{defaultproject_id}}",
						"repository"
					]
				}
			},
			"response": []
		},
		{
			"name": "Repository GetByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Repo Get\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/config/project/{{defaultproject_id}}/repository/{{repository_name}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"config",
						"project",
						"{{defaultproject_id}}",
						"repository",
						"{{repository_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Workload Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"YAML WK\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json(); ",
							"    pm.globals.set(\"workload_id\", jsonData[\"id\"]);",
							"    pm.globals.set(\"workload_name\", jsonData[\"name\"]);",
							"    pm.globals.set(\"workload_upload_link\", jsonData[\"upload_link\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					},
					{
						"key": "Referer",
						"value": "https://{{url}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"wk-{{$randomInt}}\",\n    \"type\": \"NativeYaml\",\n    \"namespace\": \"{{ns_name}}\",\n    \"placement_policy\": {\n      \"drift_action\": \"NotSet\",\n      \"label_selectors\": [\n        {\n        \"key\": \"ns\",\n        \"value\": \"true\"\n        }\n      ],\n      \"selector_context\": {\n        \"placementPolicyType\": \"CustomLabels\"\n      }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}/config/v1/projects/{{project_id}}/workloads/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"config",
						"v1",
						"projects",
						"{{project_id}}",
						"workloads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Workload List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET Workload\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/config/v1/projects/{{project_id}}/workloads/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"config",
						"v1",
						"projects",
						"{{project_id}}",
						"workloads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Workload - Upload Payload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"YAML WK\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-RAFAY-API-KEYID",
						"value": "{{key}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "x-csrftoken",
						"value": "{{console_csrftoken}}",
						"type": "text"
					},
					{
						"key": "cookie",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "https://{{url}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "payload",
							"type": "file",
							"src": "nginx-deployment.yaml"
						}
					]
				},
				"url": {
					"raw": "https://{{url}}/v1/config/projects/{{project_id}}/workloads/{{workload_id}}/upload_payload/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"config",
						"projects",
						"{{project_id}}",
						"workloads",
						"{{workload_id}}",
						"upload_payload",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Pipeline Create\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"pipeline_name\", jsonData.metadata[\"name\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n            \"metadata\": {\n                \"name\": \"approval-workload-{{$randomInt}}\",\n                \"displayName\": \"approval-workload-{{$randomInt}}\"\n            },\n            \"spec\": {\n                \"stages\": [\n                    {\n                        \"name\": \"approval\",\n                        \"stageType\": \"ApprovalStage\",\n                        \"stageConfig\": {\n                            \"approval\": {\n                                \"approvalType\": \"Email\",\n                                \"timeout\": \"0s\",\n                                \"approvers\": [\n                                    {\n                                        \"username\": \"ram@rafay.co\"\n                                    }\n                                ]\n                            },\n                            \"onFailure\": \"Stop\"\n                        }\n                    },\n                    {\n                        \"name\": \"workload-deploy\",\n                        \"stageType\": \"DeployWorkloadStage\",\n                        \"stageConfig\": {\n                            \"deployment\": {\n                                \"workloadRef\": \"{{workload_name}}\"\n                            },\n                            \"onFailure\": \"Stop\"\n                        }\n                    }\n                ],\n                \"edges\": [\n                    {\n                        \"source\": \"approval\",\n                        \"target\": \"workload-deploy\"\n                    }\n                ]\n            }\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/pipeline",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"pipeline"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline GetByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET Pipeline\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/pipeline/{{pipeline_name}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"pipeline",
						"{{pipeline_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline Trigger Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Trigger Create\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"trigger-name\", jsonData.metadata[\"name\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n            \"metadata\": {\n                \"name\": \"webhook-{{$randomInt}}\",\n                \"displayName\": \"webhook-{{$randomInt}}\"\n            },\n            \"spec\": {\n                \"triggerType\": \"WebhookTrigger\",\n                \"pipelineRef\": \"{{pipeline_name}}\",\n                \"repositoryRef\": \"{{repository_name}}\",\n                \"triggerConfig\": {\n                    \"webhook\": {\n                        \"configType\": \"Github\"\n                    }\n                },\n                \"repositoryConfig\": {\n                    \"git\": {\n                        \"revision\": \"main\",\n                        \"paths\": [\n                            \"yaml/dev.yml\"\n                        ]\n                    }\n                }\n            }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/trigger",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"trigger"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline Trigger GetByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET Trigger\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/trigger/{{trigger-name}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"trigger",
						"{{trigger-name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline Trigger DeleteByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete Trigger\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/trigger/{{trigger-name}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"trigger",
						"{{trigger-name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline Trigger",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Trigger Pipeline\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/pipeline/{{pipeline_name}}/trigger",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"pipeline",
						"{{pipeline_name}}",
						"trigger"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline Activate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Activate Pipeline\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/pipeline/{{pipeline_name}}/status/activate",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"pipeline",
						"{{pipeline_name}}",
						"status",
						"activate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline Deactivate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deactivate Pipeline\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/pipeline/{{pipeline_name}}/status/deactivate",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"pipeline",
						"{{pipeline_name}}",
						"status",
						"deactivate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pipeline DeleteByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete Pipeline\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/pipeline/project/{{project_id}}/pipeline/{{pipeline_name}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"pipeline",
						"project",
						"{{project_id}}",
						"pipeline",
						"{{pipeline_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Project Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Project Create\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"new_project_id\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Referer",
						"value": "https://{{url}}",
						"type": "text"
					},
					{
						"key": "x-csrftoken",
						"value": "{{console_csrftoken}}",
						"type": "text"
					},
					{
						"key": "cookie",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"postmantestproject-{{$randomInt}}\",\r\n    \"description\": \"Postman tests\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}/auth/v1/projects/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"v1",
						"projects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Project List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET Projects\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "x-csrftoken",
						"value": "{{console_csrftoken}}",
						"type": "text"
					},
					{
						"key": "cookie",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url}}/auth/v1/projects/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"v1",
						"projects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Project Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete Pipeline\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "x-csrftoken",
						"value": "{{console_csrftoken}}",
						"type": "text"
					},
					{
						"key": "cookie",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "https://{{url}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url}}/auth/v1/projects/{{new_project_id}}/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"v1",
						"projects",
						"{{new_project_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Workload GetById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET Workload\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/config/v1/projects/{{project_id}}/workloads/{{workload_id}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"config",
						"v1",
						"projects",
						"{{project_id}}",
						"workloads",
						"{{workload_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Workload Publish",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Publish Pipeline\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					},
					{
						"key": "Referer",
						"value": "https://{{url}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url}}/config/v1/projects/{{project_id}}/workloads/{{workload_id}}/publish/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"config",
						"v1",
						"projects",
						"{{project_id}}",
						"workloads",
						"{{workload_id}}",
						"publish",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Workload DeleteById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete Workload\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					},
					{
						"key": "Referer",
						"value": "https://{{url}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url}}/config/v1/projects/{{project_id}}/workloads/{{workload_id}}/",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"config",
						"v1",
						"projects",
						"{{project_id}}",
						"workloads",
						"{{workload_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Namespace Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"NS Delete\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/config/project/{{project_id}}/namespace/{{ns_name}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"config",
						"project",
						"{{project_id}}",
						"namespace",
						"{{ns_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Repository DeleteByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete Repo\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-csrftoken",
						"type": "text",
						"value": "{{console_csrftoken}}"
					},
					{
						"key": "cookie",
						"type": "text",
						"value": "csrftoken={{console_csrftoken}}; rsid={{console_rsid}}"
					}
				],
				"url": {
					"raw": "https://{{url}}/v2/config/project/{{defaultproject_id}}/repository/{{repository_name}}",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"config",
						"project",
						"{{defaultproject_id}}",
						"repository",
						"{{repository_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "qc-console.stage.rafay.dev"
		},
		{
			"key": "username",
			"value": "ram@rafay.co"
		},
		{
			"key": "password",
			"value": "Rafay!2345"
		},
		{
			"key": "project_id",
			"value": "lk5rnd2"
		},
		{
			"key": "defaultproject_id",
			"value": "lk5rnd2"
		},
		{
			"key": "endpoint",
			"value": "https://github.com/rbhupalc/pipeline-test.git"
		},
		{
			"key": "tokengit",
			"value": "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"
		},
		{
			"key": "usernamegit",
			"value": "rbhupalc"
		}
	]
}